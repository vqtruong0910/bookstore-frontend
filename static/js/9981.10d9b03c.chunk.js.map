{"version":3,"file":"static/js/9981.10d9b03c.chunk.js","mappings":"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","sources":["constants/validate.js","webpack://frontend/./src/page/Admin/ProductManagement/style.module.scss?28ba","page/Admin/ProductManagement/index.jsx"],"sourcesContent":["// Rules react-form-hook\r\n\r\nexport const VALIDATE = {\r\n    email: {\r\n        required: \"Xin nhập vào email của bạn\",\r\n        pattern: {\r\n            value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g,\r\n            message: 'Email sai định dạng'\r\n        }\r\n    },\r\n    password: {\r\n        required: \"Xin nhập vào mật khẩu\",\r\n        pattern: {\r\n            value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\r\n            message: 'Tối thiểu tám ký tự, ít nhất một chữ hoa, một chữ thường và một số'\r\n        }\r\n    },\r\n    // name -> thuộc tính cần confirm\r\n    // watch -> hàm xem thuộc tính của reac hook form truyền vào\r\n    confirmPassword: (name, watch) => {\r\n        return {\r\n            required: \"Xin nhập lại mật khẩu\",\r\n            validate: value => {\r\n                if (value !== watch(name)) return \"Mật khẩu không trùng khớp\";\r\n            }\r\n        }\r\n    },\r\n    date: {\r\n        required: \"Ngày sinh của bạn ?\",\r\n        pattern: {\r\n            value: /^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/,\r\n            message: 'DD/MM/YYYY'\r\n        }\r\n    },\r\n    name: {\r\n        required: \"Nhập tên sản phẩm\"\r\n    },\r\n    gender: { required: \"Giới tính của bạn là gì ?\" },\r\n    unit: {\r\n        required: \"Nhập đơn vị tính của sản phẩm\",\r\n        min: {\r\n            value: 1,\r\n            message: \"Xin vui lòng nhập giá lớn hơn 1\"\r\n        }\r\n    },\r\n    price: {\r\n        required: \"Nhập giá bán sản phẩm thêm vào\"\r\n    },\r\n    count: {\r\n        required: \"Nhập số lượng sản phẩm thêm vào\",\r\n        min: {\r\n            value: 1,\r\n            message: \"Xin vui lòng nhập số lượng lớn hơn 0\"\r\n        }\r\n    },\r\n    category: {\r\n        required: \"Chọn danh mục cho sản phẩm\"\r\n    },\r\n    typeof: {\r\n        required: \"Chọn thể loại cho sản phẩm\"\r\n    },\r\n    publishing: {\r\n        required: \"Chọn nhà xuất bản cho sản phẩm\"\r\n    },\r\n    author: {\r\n        required: \"Chọn tác giả cho sản phẩm\"\r\n    },\r\n    discount: {\r\n        required: \"Nhập phầm trăm giá giảm cho sản phẩm\",\r\n        min: {\r\n            value: 0,\r\n            message: \"Xin vui lòng nhập giá lớn hơn hoặc bằng 0\"\r\n        }\r\n    },\r\n    numberPage: {\r\n        required: \"Nhập số trang của sản phẩm\",\r\n        min: {\r\n            value: 1,\r\n            message: \"Xin vui lòng nhập giá lớn hơn 0\"\r\n        }\r\n    },\r\n    content: {\r\n        required: \"Viết vài dòng mô tả ngắn về nội dung\"\r\n    },\r\n    image: {\r\n        required: \"Thêm 1 ảnh cho sản phẩm\",\r\n        validate: {\r\n            acceptedFormats: files => {\r\n                if (files?.type)\r\n                    return (\r\n                        ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'].includes(\r\n                            files?.type\r\n                        ) || 'Định dạng ảnh là PNG, JPEG, JPG, GIF'\r\n                    )\r\n\r\n            },\r\n            lessThan10MB: files => {\r\n                if (files?.size)\r\n                    return (\r\n                        files?.size < 10485760 || 'Kích thước ảnh tối đa là 10MB'\r\n                    )\r\n            }\r\n        }\r\n    },\r\n    filterDate: {\r\n        pattern: {\r\n            value: /^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/,\r\n            message: 'DD/MM/YYYY'\r\n        }\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"none-spin\":\"style_none-spin__0Bn5P\",\"hide-scrollbar\":\"style_hide-scrollbar__2tg8l\"};","import clsx from 'clsx';\r\nimport { useCallback, useId, useState } from 'react';\r\nimport { BsCardImage, BsPencilSquare } from 'react-icons/bs';\r\nimport { AiFillDelete } from 'react-icons/ai'\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Loading from '../../../components/Loading';\r\nimport axiosJWT from '../../../config/axiosJWT';\r\nimport { API } from '../../../constants/api';\r\nimport { PATH } from '../../../constants/path';\r\nimport style from './style.module.scss';\r\nimport { useForm } from 'react-hook-form';\r\nimport { VALIDATE } from '../../../constants/validate'\r\nfunction ProductManage() {\r\n    const id = useId();\r\n    const navigate = useNavigate();\r\n    const queryClient = useQueryClient();\r\n    const [page, setPage] = useState(1);\r\n    const [search, setSearch] = useState(false);\r\n    const { register, formState: { errors }, handleSubmit, reset, watch } = useForm({\r\n        mode: \"onBlur\",\r\n        defaultValues: {\r\n            DanhMuc: \"\",\r\n            TheLoai: \"\",\r\n            Ngay: \"\",\r\n        }\r\n    });\r\n    const { data: products, isLoading, isError } = useQuery(['products', page, search], async () => {\r\n        const param = {}\r\n        if (search.DanhMuc)\r\n            param.c = search.DanhMuc\r\n        if (search.TheLoai)\r\n            param.k = search.TheLoai\r\n        if (search.Ngay)\r\n            param.d = search.Ngay\r\n        try {\r\n            const result = await axiosJWT.get(API.GET_PRODUCT_IN_PAGE, {\r\n                params: {\r\n                    p: page,\r\n                    s: 5,\r\n                    ...param\r\n                }\r\n            });\r\n            return result.data;\r\n        } catch (error) {\r\n            return []\r\n        }\r\n    }, { keepPreviousData: true });\r\n    const { data: category, isError: isErrorCategory } = useQuery(['category'], async () => {\r\n        const result = await axiosJWT.get(API.GET_LIST_ALL_CATEGORY);\r\n        return result.data;\r\n    }, { keepPreviousData: true, staleTime: 5000 });\r\n    const { data: typeOfBook, isError: isErrorTypeOfBook } = useQuery(['typeofbook', watch(\"DanhMuc\")], async () => {\r\n        if (watch(\"DanhMuc\")) {\r\n            const result = await axiosJWT.get(`${API.GET_LIST_ALL_TYPEOF_BOOK}/${watch(\"DanhMuc\")}`)\r\n            return result.data;\r\n        }\r\n        return []\r\n    }, { keepPreviousData: true, staleTime: 5000 });\r\n    const { mutateAsync } = useMutation(async (idProduct) => {\r\n        const result = await axiosJWT.delete(`${API.DELETE_PRODUCT}/${idProduct}`)\r\n        return result.data;\r\n    }, {\r\n        onSuccess: () => {\r\n            queryClient.invalidateQueries(\"products\")\r\n        }\r\n    })\r\n    const checkDate = useCallback((data) => {\r\n        if (data !== null) {\r\n            const date = new Date(data)\r\n            return (\"0\" + date.getDate()).slice(-2) + \"/\" + (\"0\" + (date.getMonth() + 1)).slice(-2) + \"/\" + date.getFullYear();\r\n        }\r\n    }, [])\r\n\r\n    const nextPage = useCallback(() => {\r\n        setPage(currentPage => currentPage >= products.SoLuongTrang ? products.SoLuongTrang : ++currentPage);\r\n    }, [page, products]);\r\n\r\n    const prevPage = useCallback(() => {\r\n        setPage(currentPage => currentPage > 1 ? --currentPage : 1);\r\n    }, [page]);\r\n\r\n    const firstPage = useCallback(() => {\r\n        setPage(1);\r\n    }, []);\r\n    const lastPage = useCallback(() => {\r\n        setPage(products.SoLuongTrang);\r\n    }, [products]);\r\n    const changePage = useCallback((e) => {\r\n        const value = parseInt(e.target.value);\r\n        if (value > 0 && value <= products.SoLuongTrang)\r\n            setPage(value);\r\n    }, [products]);\r\n\r\n    const deleteProduct = useCallback((idProduct) => {\r\n        if (window.confirm(\"Bạn chắn chắn là muốn xóa sản phẩm này chứ\"))\r\n            mutateAsync(idProduct)\r\n                .then(() => {\r\n                    window.alert(\"Xóa sản phẩm thành công\");\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    window.alert(\"Xóa sản phẩm thất bại\");\r\n                })\r\n    }, [])\r\n\r\n    const transferUpdateProduct = useCallback((data) => {\r\n        navigate(PATH.admin.update_product, { state: data })\r\n    }, []);\r\n\r\n    const submitFilter = useCallback((data) => {\r\n        setSearch({ ...data });\r\n    }, [])\r\n    const resetFilter = useCallback(() => {\r\n        reset({\r\n            DanhMuc: \"\",\r\n            TheLoai: \"\",\r\n            Ngay: \"\"\r\n        });\r\n        setSearch(false);\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n    if (isError || isErrorCategory || isErrorTypeOfBook) {\r\n        return (\r\n            <h1>Không thể tải được dữ liệu 😥</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex space-x-2\">\r\n                <h2 className=\"text-xl font-semibold\">Sản phẩm</h2>\r\n                <Link to={PATH.admin.add_product} className=\"px-3 py-1 bg-orange-600 rounded-sm text-white text-sm hover:bg-orange-500 transition-colors\">Thêm sản phẩm</Link>\r\n            </div>\r\n\r\n            <div className=\"py-2 space-y-1\">\r\n                <div className=\"hidden md:flex\">\r\n                    {/* <div className=\"flex space-x-3\">\r\n                        <input type=\"text\" className=\"rounded-sm border\" />\r\n                        <input type=\"submit\" className=\"rounded-sm border px-2 py-1 text-sm cursor-pointer bg-white\" value=\"Tìm\" />\r\n                    </div> */}\r\n                    <form onSubmit={handleSubmit(submitFilter)} className=\"flex ml-auto space-x-3\">\r\n                        <select {...register(\"DanhMuc\")} className=\"rounded-sm border cursor-pointer\">\r\n                            <option value=\"\">--Select--</option>\r\n                            {category?.map((item) => (\r\n                                <option key={item.IDDanhMuc} value={item.IDDanhMuc}>{item.TenDanhMuc}</option>\r\n                            ))}\r\n                        </select>\r\n                        <select {...register(\"TheLoai\")} className=\"rounded-sm border cursor-pointer\">\r\n                            <option value=\"\">--Select--</option>\r\n                            {typeOfBook?.map((item) => (\r\n                                <option key={item.IDTheLoai} value={item.IDTheLoai}>{item.TenTheLoai}</option>\r\n                            ))}\r\n                        </select>\r\n                        <input type=\"date\" {...register(\"Ngay\", VALIDATE.filterDate)} className=\"rounded-sm border cursor-pointer\" />\r\n                        <input type=\"submit\" className=\"rounded-sm border px-2 py-1 text-sm cursor-pointer bg-white\" value=\"Lọc\" />\r\n                        {search && <input onClick={resetFilter} type=\"button\" className=\"rounded-sm text-red-500 border px-2 py-1 text-sm cursor-pointer bg-white\" value=\"X\" />}\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"flex justify-end space-x-2 py-1\">\r\n                    <div className='px-2 border rounded-sm cursor-pointer'>{products.TongSanPham} mục</div>\r\n                    <div className='px-2 border rounded-sm cursor-pointer' onClick={firstPage}>&#171;</div>\r\n                    <div className='px-2 border rounded-sm cursor-pointer' onClick={prevPage}>&#60;</div>\r\n                    <div><input type=\"number\" className={clsx(style[\"none-spin\"], 'px-2 border rounded-sm cursor-pointer w-14 text-center')} value={page} onChange={(e) => changePage(e)} /> &#47; {products?.SoLuongTrang}</div>\r\n                    <div className='px-2 border rounded-sm cursor-pointer' onClick={nextPage}>&#62;</div>\r\n                    <div className='px-2 border rounded-sm cursor-pointer' onClick={lastPage}>&#187;</div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <table className=\"table-auto border-collapse border rounded-sm w-full bg-white md:table-fixed\">\r\n                <thead>\r\n                    <tr className=\"border bg-slate-800 text-slate-200\">\r\n                        <th className=\"p-2 w-24 hidden md:table-cell\"><BsCardImage className='mx-auto w-full' /></th>\r\n                        <th className=\"p-2 w-40 text-left\">Tên</th>\r\n                        <th className=\"p-2 w-40 text-left\">Danh mục</th>\r\n                        <th className=\"p-2 text-left\">Thể loại</th>\r\n                        <th className=\"p-2 text-left\">Giá (VNĐ)</th>\r\n                        <th className=\"p-2 text-center hidden md:table-cell\">Giảm giá</th>\r\n                        <th className=\"p-2 text-left hidden md:table-cell\">Đơn vị</th>\r\n                        <th className=\"p-2 text-left hidden md:table-cell\">Ngày thêm</th>\r\n                        <th className=\"p-2 text-center hidden md:table-cell\">Số lượng</th>\r\n                        <th className=\"p-2 text-center w-16\"></th>\r\n                        <th className=\"p-2 text-center w-16\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products?.DanhSach?.map(item => {\r\n                        return (\r\n                            <tr key={id + item.IDSanPham} className=\"odd:bg-slate-100 border\">\r\n                                <td className=\"p-2 hidden md:table-cell\"><img className='object-contain h-24 mx-auto' src={item.HinhAnh} alt=\"book\" /></td>\r\n                                <td className=\"p-2\">{item.TenSanPham}</td>\r\n                                <td className=\"p-2\">{item.TenDanhMuc}</td>\r\n                                <td className=\"p-2\">{item.TenTheLoai}</td>\r\n                                <td className=\"p-2\">{item.GiaBan}</td>\r\n                                <td className=\"p-2 text-center hidden md:table-cell\">{item.GiamGia}</td>\r\n                                <td className=\"p-2 hidden md:table-cell\">{item.DonViTinh}</td>\r\n                                <td className=\"p-2 hidden md:table-cell\">{checkDate(item.NgayThem)}</td>\r\n                                <td className=\"p-2 hidden md:table-cell text-center\">{item.SoLuongConLai}</td>\r\n                                <td className=\"p-2 text-indigo-500 font-semibold w-16 align-middle\"><span className=\"w-full\"><BsPencilSquare onClick={() => transferUpdateProduct(item)} size={20} className='cursor-pointer mx-auto' /></span></td>\r\n                                <td className=\"p-2 text-red-500 font-semibold w-16 align-middle\"><span className=\"w-full\"><AiFillDelete onClick={() => deleteProduct(item.IDSanPham)} size={20} className='cursor-pointer mx-auto' /></span></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductManage;\r\n"],"names":["VALIDATE","email","required","pattern","value","message","password","confirmPassword","name","watch","validate","date","gender","unit","min","price","count","category","typeof","publishing","author","discount","numberPage","content","image","acceptedFormats","files","type","includes","lessThan10MB","size","filterDate","id","useId","navigate","useNavigate","queryClient","useQueryClient","useState","page","setPage","search","setSearch","useForm","mode","defaultValues","DanhMuc","TheLoai","Ngay","register","handleSubmit","formState","errors","reset","useQuery","param","c","k","d","axiosJWT","API","params","p","s","result","data","keepPreviousData","products","isLoading","isError","staleTime","isErrorCategory","typeOfBook","isErrorTypeOfBook","useMutation","idProduct","onSuccess","invalidateQueries","mutateAsync","checkDate","useCallback","Date","getDate","slice","getMonth","getFullYear","nextPage","currentPage","SoLuongTrang","prevPage","firstPage","lastPage","changePage","e","parseInt","target","deleteProduct","window","confirm","then","alert","catch","err","console","log","transferUpdateProduct","PATH","state","submitFilter","resetFilter","Loading","className","to","onSubmit","map","item","IDDanhMuc","TenDanhMuc","IDTheLoai","TenTheLoai","onClick","TongSanPham","clsx","style","onChange","DanhSach","src","HinhAnh","alt","TenSanPham","GiaBan","GiamGia","DonViTinh","NgayThem","SoLuongConLai","IDSanPham"],"sourceRoot":""}